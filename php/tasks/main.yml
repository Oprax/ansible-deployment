---
- name: PHP | Add sury.org key (Debian only)
  apt_key:
    url: "https://packages.sury.org/php/apt.gpg"
    state: present
  when: ansible_distribution == 'Debian'
- name: PHP | Add sury.org list (Debian only)
  shell: echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/php.list
  when: ansible_distribution == 'Debian'
  args:
    creates: /etc/apt/sources.list.d/php.list
- name: PHP | Add Ondrej PPA (Ubuntu only)
  apt_repository:
    repo: "ppa:ondrej/php"
    state: present
  when: ansible_distribution == 'Ubuntu'
- name: PHP | Install
  apt:
    update_cache: yes
    name:
      - "php{{ php_version }}-fpm"
      - "php{{ php_version }}-mbstring"
      - "php{{ php_version }}-xml"
      - "php{{ php_version }}-zip"
      - "php{{ php_version }}-intl"
      - "php{{ php_version }}-curl"
      - "php{{ php_version }}-gd"
- name: PHP | Database driver
  when: db_driver == "pgsql"
  apt:
    name: "php{{ php_version }}-pgsql"
- name: PHP | Database driver
  when: db_driver == "mysql"
  apt:
    name: "php{{ php_version }}-mysql"
- name: PHP | Composer setup script
  template:
    src: composer-setup.sh.j2
    dest: "/opt/"
  args:
    creates: /usr/local/bin/composer
- name: PHP | Install composer
  shell: "sh /opt/composer-setup.sh"
  args:
    creates: /usr/local/bin/composer
- name: PHP | Disable errors
  lineinfile:
    dest: "/etc/php/{{ php_version }}/fpm/php.ini"
    regexp: "display_errors"
    line: "display_errors = 0"
  notify: php-restart